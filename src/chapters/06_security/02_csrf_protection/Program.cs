using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;

namespace CSRFProtectionDemo
{
    public class Program
    {
        public static void Main(string[] args)
        {
            CreateHostBuilder(args).Build().Run();
        }

        public static IHostBuilder CreateHostBuilder(string[] args) =>
            Host
                .CreateDefaultBuilder(args)
                .ConfigureWebHostDefaults(webBuilder =>
                {
                    webBuilder.UseStartup<Startup>();
                });
    }

    public class Startup
    {
        public void ConfigureServices(IServiceCollection services)
        {
            // Introduction:
            // CSRF (Cross-Site Request Forgery) is a type of attack where a malicious website tricks a user's browser into performing
            // actions on a trusted site without their consent. For example, transferring money or changing account settings.

            // ASP.NET Core includes built-in CSRF protection through the use of anti-forgery tokens.
            // Anti-forgery tokens are generated by the server and included in forms. 
            // When the form is submitted, the token is validated.
            // The tokens are signed to prevent tampering and are unique per user session.

            // Use Cases:
            // - Protect form submissions from being exploited by attackers.
            // - Ensure requests to sensitive endpoints are coming from trusted sources.

            // Enable MVC and Razor Pages with CSRF protection.
            services.AddControllersWithViews(options =>
            {
                // Explanation:
                // CSRF protection is enabled by default in ASP.NET Core. 
                // However, certain actions (like APIs or custom AJAX calls) may require explicit configuration.
                options.Filters.Add(new AutoValidateAntiforgeryTokenAttribute());
            });
        }

        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
        {
            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
            }

            app.UseRouting();

            app.UseEndpoints(endpoints =>
            {
                // Map default controller routes.
                endpoints.MapDefaultControllerRoute();
            });
        }
    }

    // Example Controller: Demonstrates CSRF protection with a simple form.
    public class HomeController : Controller
    {
        [HttpGet("/")]
        public IActionResult Index()
        {
            // Explanation:
            // This view contains a form that will include an anti-forgery token for protection.
            // Check: Views/Home/Index.cshtml
            // Try submitting the form without the anti-forgery token to see the validation error.
            return View();
        }

        [HttpPost("/submit")]
        // Validates the anti-forgery token submitted with the form explicitly for this action.
        [ValidateAntiForgeryToken] 
        public IActionResult Submit(string inputData)
        {
            // Process the submitted data.
            return Content($"Form submitted successfully! Data: {inputData}");
        }
    }
}
